stages:
  - build
  - test
  - qa
  - release
  - deploy

empaquetar:
  stage: build
  script:
    - mvn package -DskipTests=true
  artifacts:
    paths:
      - target/

pruebas-unitarias:
  stage: build
  script:
    - export DATABASE_HOST="jdbc:mysql://localhost"
    - export DATABASE_PORT="3306"
    - export DATABASE_NAME="baloncesto"
    - export DATABASE_USER="usuario"
    - export DATABASE_PASS="clave"
    - mvn test

pruebas-funcionales:
  stage: test
  dependencies:
    - empaquetar
  script:
    - cp -r target/Baloncesto /usr/local/tomcat/webapps
    - mysql -u root < db/baloncesto.sql
    - export DATABASE_HOST="jdbc:mysql://localhost"
    - export DATABASE_PORT="3306"
    - export DATABASE_NAME="baloncesto"
    - export DATABASE_USER="usuario"
    - export DATABASE_PASS="clave"
    - sh /usr/local/tomcat/bin/catalina.sh stop
    - sh /usr/local/tomcat/bin/catalina.sh start
    - mvn failsafe:integration-test failsafe:verify

calidad-codigo:
  stage: qa
  dependencies:
    - empaquetar
  script:
    - mvn sonar:sonar -Dsonar.host.url=http://sonarqube:9000 -Dsonar.qualitygate.wait=true -Dsonar.login=admin -Dsonar.password=Xzv%3475
  allow_failure: false

despliegue-host-heroku-pre:
  stage: release
  dependencies:
    - empaquetar
  script:
    - export HEROKU_API_KEY=$HEROKU_API_KEY
    - mvn heroku:deploy-war -Dheroku.appName=baloncesto-cobo-pre -DskipTests=true 
  only:
    - master  

despliegue-host-heroku:
  stage: deploy
  dependencies:
    - empaquetar
  script:
    - export HEROKU_API_KEY=$HEROKU_API_KEY
    - mvn heroku:deploy-war -Dheroku.appName=baloncesto-cobo -DskipTests=true
  when: manual
  only:
    - master